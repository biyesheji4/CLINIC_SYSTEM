<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	<!-- 配置注解驱动 -->
	<mvc:annotation-driven />
	<task:annotation-driven/>
	<mvc:default-servlet-handler/>
	
	<!-- 配置包扫描器 ,使用注解的包-->
	<context:component-scan base-package="com.yznu.clinic.controller"></context:component-scan>
	
	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 --> 
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- spring mvc 能够访问静态内容 begin -->
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<!-- <mvc:resources location="/html/" mapping="/html/**" /> -->
	<mvc:resources location="/vendor/" mapping="/vendor/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	<!-- spring mvc 能够访问静态内容 end -->
	<!-- 如果资源文件放在WEB-INF下面
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
	 -->
	 <!-- 可以引入资源文件
	<context:property-placeholder location="classpath:properties/resource.properties" />
	 -->
	 
	 <!--避免IE执行AJAX时，返回JSON出现乱码 -->  
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="10485760"></property>
    </bean>
    
    <!-- 完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>


    <!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
    	<mvc:interceptor>
        	<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
        	<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login.do" />
			<mvc:exclude-mapping path="/xuan/verifyCode.do" />
			<mvc:exclude-mapping path="/logins.do" />
        	<bean class="com.yznu.clinic.filter.LoginInterceptor"></bean>

   	 	</mvc:interceptor>
   	 <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
</beans> 